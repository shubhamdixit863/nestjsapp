# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:  # Branch names to include or exclude for triggering a run.
    include: 
    - master
pool:
  vmImage: ubuntu-latest

variables:
   COMMIT_TIME: $(Get-Date -Format yyyyMMddhhmmss)
   WK_CI_AZ_DOCKER_LOGINSERVER: trueworld.azurecr.io
   WK_CI_AZ_DOCKER_USERNAME: trueworld
   WK_CI_AZ_DOCKER_PASSWORD: 19oQrWG0x27xzaAA447vk4zNHj/hjwbG
   APP_NAME: true-user-dashboard-api
   CURRENT_STAGING: production
   WK_CI_TWO_AZ_LOGIN_USERNAME: db9f1c65-94d6-4683-b8da-649d8ac72c15
   WK_CI_TWO_AZ_LOGIN_PASSWORD: GfC8Q~nJMJtWAzXIymisZyzcxtaaxye13I1CDa4N
   WK_CI_TWO_AZ_LOGIN_TENANT: 9db04231-20d6-4f10-b030-c9d0a9160795
   WK_CI_AZ_KUBERNETES_SERVICE_NAME: twk8s
   WK_CI_AZ_RESOURCEGROUP: aks
steps:
- pwsh: echo "##vso[task.setvariable variable=myDateFormatted;isOutput=true]$(COMMIT_TIME)"
  name: myDateFormattedStep
  displayName: 'Set the formatted date variable'


- script: |
   HASH=`git rev-parse --short=7 HEAD`  
   docker build -f _docker/Dockerfile --target production -t ${APP_NAME}:V-${HASH} . --label "version=1.0" --label "committed-on=$(myDateFormattedStep.myDateFormatted)" --label "commit-hash=${HASH}"
   docker login --username ${WK_CI_AZ_DOCKER_USERNAME} --password ${WK_CI_AZ_DOCKER_PASSWORD} ${WK_CI_AZ_DOCKER_LOGINSERVER}
   docker tag ${APP_NAME}:V-${HASH} ${WK_CI_AZ_DOCKER_LOGINSERVER}/${APP_NAME}:V-${HASH}
   docker push ${WK_CI_AZ_DOCKER_LOGINSERVER}/${APP_NAME}:V-${HASH}
   docker tag ${APP_NAME}:V-${HASH} ${WK_CI_AZ_DOCKER_LOGINSERVER}/${APP_NAME}:latest
   docker push ${WK_CI_AZ_DOCKER_LOGINSERVER}/${APP_NAME}:latest
  displayName: 'Docker'
- script: |
   HASH=`git rev-parse --short=7 HEAD`  
   cp _docker/kubernetes-deploy.yml.template _docker/kubernetes-deploy.yml
   ex -s -c "%s/__IMAGE_TAG__/${HASH}/g|x" _docker/kubernetes-deploy.yml
   ex -s -c "%s/__STAGING__/${CURRENT_STAGING}/g|x" _docker/kubernetes-deploy.yml
   ex -s -c "%s/__VERSION__/${HASH}/g|x" _docker/kubernetes-deploy.yml
   ex -s -c "%s/__APP_SERVICE_NAME__/${APP_NAME}/g|x" _docker/kubernetes-deploy.yml
   ex -s -c "%s/__NAMESPACE__/${CURRENT_STAGING}/g|x" _docker/kubernetes-deploy.yml
   ex -s -c "%s/__DOCKER_REPOSITORY__/${WK_CI_AZ_DOCKER_LOGINSERVER}/g|x" _docker/kubernetes-deploy.yml
   echo "az login --service-principal"
   az login --service-principal --username ${WK_CI_TWO_AZ_LOGIN_USERNAME} --password ${WK_CI_TWO_AZ_LOGIN_PASSWORD} --tenant ${WK_CI_TWO_AZ_LOGIN_TENANT}
   az account set --subscription "Suscripción TrueWorld"
   az aks get-credentials --name ${WK_CI_AZ_KUBERNETES_SERVICE_NAME} --resource-group ${WK_CI_AZ_RESOURCEGROUP} --overwrite-existing
   kubectl config view
   kubectl apply -f _docker/kubernetes-deploy.yml
   az account set --subscription "Suscripción TrueWorld"
  displayName: 'Kubernetes'